;------------------------------------------------------------------------------------------------
; Mokujin Polybar Theme
; Version 0.97
; Copyright 2022 seek
;
;   This program is free software: you can redistribute it and/or modify it 
;   under the terms of the GNU General Public License as published by the 
;   Free Software Foundation, either version 3 of the License, or (at your 
;   option) any later version.
;
;   This program is distributed in the hope that it will be useful, but 
;   WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
;   or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
;   more details.
;
;   You should have received a copy of the GNU General Public License along 
;   with this program. If not, see <https://www.gnu.org/licenses/>.;
;------------------------------------------------------------------------------------------------

; Note:
;   Designed using polybar 3.6.3-58-gb5764c8a from git/master
;   Try using the lastest git version if you're experience bugs



;------------------------------------------------------------------------------------------------
; User Configuration
;------------------------------------------------------------------------------------------------
;------------------------------------------------
; Media Player Daemon
;------------------------------------------------
[config/mpd]
;   Configure to match your mpd server settings.  The song info maximum length
;   is set to 70, based on a 2560x1440 desktop resolution.  Lower resolution
;   desktops may want to adjust this to a lower number to prevent the middle
;   section from being pushed around.
;
host                        = 
port                        = 
password                    = 
interval                    = 2
label-song-maxlen           = 70

;------------------------------------------------
; Wireless Gamepad Battery Level
;------------------------------------------------
;   The gamepad modules use an environment variable that contains the path to a
;   readable battery level file within sysfs.  The presence of this file 
;   depends on the driver to provide it and the path may be different depending 
;   on hardware, kernel and driver used.  The endpoint file should contain only 
;   a raw number ranging from 0 to 100.
;
;   For devices which use the 'hid_playstation' driver, the path will probably 
;   look somethine like:
;
;   /sys/class/power_supply/ps-controller-battery-<mac_address>/capacity
;
[config/gamepad1]
env-GMPD_BATT_SYSFSPATH = ""

[config/gamepad2]
env-GMPD_BATT_SYSFSPATH = ""

[config/gamepadicons]
; Uncomment your preferred battery icons for gamepads
env-GMPD_ICONS             =           
;env-GMPD_ICONS            =       
;env-GMPD_ICONS            =     
;env-GMPD_ICONS            = ﱊ ﱌ ﱍ ﱋ

;------------------------------------------------
; System Battery
;------------------------------------------------
[config/sysbatt]
; See the Polybar battery documentation for an explanation of these settings.
battery                 = 
adapater                = 

;------------------------------------------------
; Backlight
;------------------------------------------------
[config/backlight]
; See Polybar backlight documentation for an explanation of these settings.
card                    = 
use-actual-brightness   = true
enable-scroll           = false

;------------------------------------------------
; Pulseaudio
;------------------------------------------------
[config/pulse]
; See Polybar pulseaudio documentation for an explanation of these settings.
sink                    =
enable-scroll           = false

;------------------------------------------------
; Local Weather
;------------------------------------------------
[config/weather]
; Weather Backend Configuration
;
;   This theme currently supports two methods for obtaining weather data.
;   Both of them rely on OpenWeatherMap either directly or indirectly.  The
;   fdirect method makes periodic API calls over the internet to the OWM
;   service.  The second option relies on having an existing OpenHAB 
;   (FOSS home automation) server running locally, which can be queried
;   without incurring addition API calls, which are limited to a certain
;   number of calls per-day.
;
;   The advantage of the OpenHAB method is that multiple systems can pull the
;   same weather data an unlimited number of times since OpenHAB (with the 
;   OpenWeatherMap plugin installed) caches and serves the results to be used 
;   with other local systems and home automation.
;
;   Options are:
;   none 
;       Disables feature but module space is still reserved.
;
;   owmapi 
;       Connects to and uses the OpenWeatherMap OneCall API directly.
;
;   openhab
;       Connects to an existing and configured local OpenHAB server which is 
;       running the OpenWeatherMap  plugin.
;
env-WAPI_BACKEND        = "owmapi"

; OpenWeatherMap API key (owmapi backend only)
env-WAPI_OWM_KEY        = 

; Latitude and longitude for local weather (owmapi backend only)
env-WAPI_LAT            = 
env-WAPI_LON            = 

; Local OpenHAB URL (openhab backend only)
;   Set this to the address of your local OpenHAB instance.
env-WAPI_OH_URL         = 

; OpenHAB OWM Current Condition ID item name (openhab backend only)
;   Set this to the item name which stores the openweathermap:~:current#icon-id
;   from the OWM plugin of your local OpenHAB server.  
;   NOTE:  The 'Current Condition Icon ID' is a 3-DIGIT CODE, and not to be 
;   confused with the 'current#icon' png or the 'current#condition' string
env-WAPI_OH_ITEM_CCID   = "Weather_Local_Current_ConditionIconID"

; OpenHAB OWM Current Temperature item name (openhab backend only)
;   Set this to the item name which stores the 'current#temperature' or
;   'current#apparent-temperature' as you might prefer.
env-WAPI_OH_ITEM_CTEMP  = "Weather_Local_Current_Temp"


;------------------------------------------------------------------------------------------------
; Style
;------------------------------------------------------------------------------------------------
;------------------------------------------------
; Mokujin Palette
;------------------------------------------------


;------------------------------------------------
; Colours
;------------------------------------------------
[c]
; Mokujin Palette
p00             = #090f0d
p01             = #a82260
p02             = #94bb46
p03             = #bec674
p04             = #93bcc4
p05             = #48534f
p06             = #6dd596
p07             = #8e7a4b
p08             = #3a3c35
p09             = #d13278
p10             = #aed968
p11             = #dbe387
p12             = #acdce5
p13             = #647269
p14             = #5ff29a
p15             = #bca674
p16             = #5a625f
p17             = #4a514f
p18             = #1c1e1a
trans           = #00000000

; Root
bar_fg          = ${c.p15}
bar_bg          = ${c.p08}
; Leaves
leaf_a          = ${c.p13}
leaf_b          = ${c.p16}
leaf_c          = ${c.p17}
; Silhouettes
sil             = ${c.p05}
; Time
time_fg         = ${c.p03}
time_sep_fg     = ${c.p15}
date_fg         = ${c.p03}
date_sep_fg     = ${c.p15}
; Weather
weath_ico       = ${c.p03}
weath_temp      = ${c.p03}
weath_temp_unit = ${c.p15}
; Workspaces
ws_empty_fg     = ${c.p07}
ws_occupied_fg  = ${c.p15}
ws_active_fg    = ${c.bar_bg}
ws_active_bg    = ${c.p15}
ws_urgent_fg    = ${c.p01}
; CPU load
cpu_ico         = ${c.p15}
cpu_val         = ${c.p03}
; Memory usage
mem_ico         = ${c.p15}
mem_val         = ${c.p03}
; audio
vol_ico         = ${c.p15}
vol_val         = ${c.p03}
; Media
mpd_btn         = ${c.p15}
mpd_rep         = ${c.p06}
mpd_disabled    = ${c.p16}
mpd_title       = ${c.p03}
; Bluetooth inidicator
bt_on           = ${c.p06}
bt_off          = ${c.p16}
; Update indicator
update_ico      = ${c.p01}
; Batteries
gamepadbatt_ico = ${c.p03}
; Backlight
backlight_ico   = ${c.p15}
backlight_val   = ${c.p03}
; Alert / error colour
alert           = ${c.p01}

;------------------------------------------------
; Icons
;------------------------------------------------
[i]
; OS icons
os_arch         = 
os_manjaro      = 
os_nixos        = 
os_opensuse     = 
os_freebsd      = 
os_gentoo       = 
os_mint         = 
os_debian       = 
os_devuan       = 
os_centos       = 
os_alpine       = 
os_fedora       = 
os_redhat       = 
os_ubuntu       = 
os_ubuntu_alt   = 
os_raspberry    = 
os_slackware    = 
os_elementary   = 
os_linux_other  = 
os_macos        = 
; Package manager update icons.  Set to your own preference.
pacupdates      = ${i.os_arch}
aptupdates      = ${i.os_debian}
; Leaf edges
leaf_l          = 
lear_r          = 
; Error / alert icon
alert           = 


;------------------------------------------------------------------------------------------------
; Environmental Constants
;------------------------------------------------------------------------------------------------
[env/const]
; OpenWeatherMap API URL
env-WAPI_OWM_URL        = "https://api.openweathermap.org/data/2.5/weather?units=metric"
; Where the OWM local weather data will be cached (owmapi backend only)
env-WAPI_CACHEDIR       = "${HOME}/.cache/mokujin"
; Font icon when a script needs to return an error
env-ERROR_ICON          = ${i.alert}


;------------------------------------------------------------------------------------------------
; Polybar Settings
;------------------------------------------------------------------------------------------------
[settings]
pseudo-transparency = false

[global/wm]
margin-bottom = 0
margin-top = 0


;------------------------------------------------------------------------------------------------
; Main bar
;------------------------------------------------------------------------------------------------
[bar/Mokujin]
; Main Bar
;
;   Modules names might seem a little cryptic, but are that way for the sake of 
;   brevity and readability. Modules all belong to 'leaves' which are layered 
;   from top down: [ a b c bar ]  Edge modules transitions a higher level leaf
;   with a lower one, in a given direction. For example, the module 'abr' ends 
;   the right side of leaf-a which overlaps a leaf-b.
;
;   This theme primarily uses the 'mononoke Nerd Font' family, but it does not
;   provide any japanese glyphs, so we use 'Noto Sans CJK' as a visually
;   attractive fall-through font.
;
; TODO: clean and rearrange fonts
font-0              = "mononoki Nerd Font Mono:style=Bold:size=14;4"
font-1              = "mononoki Nerd Font:style=Bold:size=10;2"
font-2              = "Noto Sans CJK JP:style=Regular:size=14;4"
font-3              = "mononoki Nerd Font Mono:style=Bold:size=16;4"
font-4              = "mononoki Nerd Font Mono:style=Regular:size=20;4"
font-5              = "mononoki Nerd Font Mono:style=Regular:size=28;6"
font-6              = "mononoki Nerd Font Mono:style=Regular:size=16;-3"
font-7              = "mononoki Nerd Font Mono:style=Regular:size=1;0"
bottom              = false
fixed-center        = true
width               = 100%
height              = 30px
background          = ${c.bar_bg}
foreground          = ${c.bar_fg}
radius              = 0
border-size         = 0
padding             = 0
module-margin       = 0
separator           = 
enable-ipc          = 1
click-left          = 
click-middle        = 
click-right         = 
scroll-up           = 
scroll-down         = 
double-click-left   = 
double-click-middle = 
double-click-right  = 
active-font         = 1
modules-left        = mpd_ctl abr mpd_track br s3 
modules-center      = s5 bl yy mm dd abl clock abr day owm-update owm-temp owm-icon br s6
modules-right       = s2 s4 cl errorcheck pacupdates aptupdates gamepad1 gamepad2 batt bluetooth bcl cpu mem bcr bcl backlight pulse bcr cr s1 al ws


;------------------------------------------------------------------------------------------------
; Inheritable Styles
;------------------------------------------------------------------------------------------------
;------------------------------------------------
; Leaves
;------------------------------------------------
[leaf/common]
active-font                     = 1
label-padding                   = 0
label-fail-padding              = 0
format-padding                  = 0
format-prefix-font              = 5
format-suffix-font              = 5

[leaf/a]
inherit                         = leaf/common
background                      = ${c.leaf_a}
label-background                = ${c.leaf_a}
format-background               = ${c.leaf_a}
format-prefix-background        = ${c.leaf_a}
format-suffix-background        = ${c.leaf_a}
format-padding-background       = ${c.leaf_a}
format-volume-background        = ${c.leaf_a}
format-muted-background         = ${c.leaf_a}
format-online-background        = ${c.leaf_a}
format-offline-background       = ${c.leaf_a}
format-fail-background          = ${c.leaf_a}
format-fail-suffix-background   = ${c.leaf_a}
format-fail-prefix-background   = ${c.leaf_a}
label-fail-background           = ${c.leaf_a}
label-empty-background          = ${c.leaf_a}
label-occupied-background       = ${c.leaf_a}
label-active-background         = ${c.leaf_a}
label-urgent-background         = ${c.leaf_a}

[leaf/b]
inherit                         = leaf/common
background                      = ${c.leaf_b}
label-background                = ${c.leaf_b}
format-background               = ${c.leaf_b}
format-prefix-background        = ${c.leaf_b}
format-suffix-background        = ${c.leaf_b}
format-padding-background       = ${c.leaf_b}
format-volume-background        = ${c.leaf_b}
format-muted-background         = ${c.leaf_b}
format-online-background        = ${c.leaf_b}
format-offline-background       = ${c.leaf_b}
format-fail-background          = ${c.leaf_b}
format-fail-suffix-background   = ${c.leaf_b}
format-fail-prefix-background   = ${c.leaf_b}
label-fail-background           = ${c.leaf_b}
label-empty-background          = ${c.leaf_b}
label-occupied-background       = ${c.leaf_b}
label-active-background         = ${c.leaf_b}
label-urgent-background         = ${c.leaf_b}

[leaf/c]
inherit                         = leaf/common
background                      = ${c.leaf_c}
label-background                = ${c.leaf_c}
format-background               = ${c.leaf_c}
format-prefix-background        = ${c.leaf_c}
format-suffix-background        = ${c.leaf_c}
format-padding-background       = ${c.leaf_c}
format-volume-background        = ${c.leaf_c}
format-muted-background         = ${c.leaf_c}
format-online-background        = ${c.leaf_c}
format-offline-background       = ${c.leaf_c}
format-fail-background          = ${c.leaf_c}
format-fail-suffix-background   = ${c.leaf_c}
format-fail-prefix-background   = ${c.leaf_c}
label-fail-background           = ${c.leaf_c}
label-empty-background          = ${c.leaf_c}
label-occupied-background       = ${c.leaf_c}
label-active-background         = ${c.leaf_c}
label-urgent-background         = ${c.leaf_c}


;------------------------------------------------
; Edges
;------------------------------------------------
[edge/common]
format-padding      = 0
label-padding       = 0
format-font         = 5

[edge/l]
format              = 

[edge/r]
format              = 

[edge/a]
format-foreground   = ${c.leaf_a}
format-background   = ${c.bar_bg}

[edge/ab]
format-foreground   = ${c.leaf_a}
format-background   = ${c.leaf_b}

[edge/b]
format-foreground   = ${c.leaf_b}
format-background   = ${c.bar_bg}

[edge/bc]
format-foreground   = ${c.leaf_b}
format-background   = ${c.leaf_c}

[edge/c]
format-foreground   = ${c.leaf_c}
format-background   = ${c.bar_bg}

;------------------------------------------------
; Silhouettes
;------------------------------------------------
[silhouette/common]
format-foreground   = ${c.sil}
format-background   = ${c.bar_bg}
format-font         = 5


;------------------------------------------------------------------------------------------------
; Style Modules
;------------------------------------------------------------------------------------------------
;------------------------------------------------
; Edges
;------------------------------------------------
[module/al]
type        = custom/text
inherit     = edge/common edge/a edge/l

[module/ar]
type        = custom/text
inherit     = edge/common edge/a edge/r

[module/abl]
type        = custom/text
inherit     = edge/common edge/ab edge/l

[module/abr]
type        = custom/text
inherit     = edge/common edge/ab edge/r

[module/bl]
type        = custom/text
inherit     = edge/common edge/b edge/l

[module/br]
type        = custom/text
inherit     = edge/common edge/b edge/r

[module/bcl]
type        = custom/text
inherit     = edge/common edge/bc edge/l

[module/bcr]
type        = custom/text
inherit     = edge/common edge/bc edge/r

[module/cl]
type        = custom/text
inherit     = edge/common edge/c edge/l

[module/cr]
type        = custom/text
inherit     = edge/common edge/c edge/r

;------------------------------------------------
; Silhouttes
;------------------------------------------------
;   These are just for extra cuteness.  Lower resolution displays may need to
;   disable or shorten some of these to make your bar fit.  Higher resolutions
;   Might want to add some more.  Keep in mind that some "artist - title"
;   strings can be very long, so you can also reduce the max song info length
;   in the User Configuration section.  If you do wish to add more, look at the
;   end of this file for some extra font icons.
[module/s1]
type            = custom/text
inherit         = silhouette/common
format          = "   "

[module/s2]
type            = custom/text
inherit         = silhouette/common
format          = "      "

[module/s3]
type            = custom/text
inherit         = silhouette/common
; You might see some font rendering weirdness here; its fine.
format          = " ﳝ    ﴫ"

[module/s4]
type            = custom/text
inherit         = silhouette/common
format          = "  "

[module/s5]
type            = custom/text
inherit         = silhouette/common
format-font     = 6
format          = " "

[module/s6]
type            = custom/text
inherit         = silhouette/common
format-font     = 6
format          = " "


;------------------------------------------------------------------------------------------------
; Functional Modules
;------------------------------------------------------------------------------------------------
;------------------------------------------------
; Media Control
;------------------------------------------------
[module/mpd_ctl]
; Media Player Daemon Control
;
;   !! See the User Configuration section to provide your mpd settings !!
;
;   REQUIRES:   mpd
type                        = internal/mpd
inherit                     = leaf/a config/mpd
interval                    = 1
format-font                 = 6
format-online               = <icon-prev> <icon-stop> <toggle> <icon-next> <icon-repeat>
format-online-foreground    = ${c.mpd_btn}
format-online-font          = 6
format-offline              = <icon-prev> <icon-stop> <toggle> <icon-next> <icon-repeat>
format-offline-foreground   = ${c.mpd_disabled}
format-offline-font         = 6
icon-play                   = 喇
icon-pause                  = 
icon-stop                   = ﭥ
icon-prev                   = ﭢ
icon-next                   = ﭠ
icon-repeat                 = 
icon-single                 = 稜
icon-random                 = 
format-icon-font            = 6
toggle-on-foreground        = ${c.mpd_rep}
toggle-off-foreground       = ${c.mpd_disabled}
format-online-padding       = 8px

[module/mpd_track]
; Media Play Daemon Current Track
;
;   !! See the User Configuration section to provide your mpd settings !!
;
;   REQUIRES:   mpd
type                        = internal/mpd
inherit                     = leaf/b config/mpd
interval                    = 1
format-online-font          = 2
format-offline-font         = 2
format-online               = <label-song>
format-online-padding       = 8px
format-offline              = 
format-offline-padding      = 0px
label-song                  = "%artist% - %title%"
label-song-font             = 2
label-song-foreground       = ${c.mpd_title}
label-song-ellipsis         = true

;------------------------------------------------
; Time & Date
;------------------------------------------------
; Japanese Calendar Date
;
;   Broken into multiple modules for better formatting control.
;   Uses the ONLY rational date format, ISO 8601, blessed be.
;
[module/yy]
type                        = internal/date
inherit                     = leaf/b
interval                    = 1
date                        = %Y
format                      = <label>
format-suffix               = 年
format-suffix-foreground    = ${c.date_sep_fg}
label                       = %date%
label-foreground            = ${c.date_fg}
; Fine-tune centering
label-padding-left          = 8px

[module/mm]
type                        = internal/date
inherit                     = leaf/b
interval                    = 1
date                        = %m
format                      = <label>
format-suffix               = 月
format-suffix-foreground    = ${c.date_sep_fg}
label                       = %date%
label-foreground            = ${c.date_fg}

[module/dd]
type                        = internal/date
inherit                     = leaf/b
interval                    = 1
date                        = %d
format                      = <label>
format-suffix               = 日
format-suffix-foreground    = ${c.date_sep_fg}
format-suffix-padding-right = 1
label                       = %date%
label-foreground            = ${c.date_fg}

[module/clock]
; 24 Hour Wall-Clock Time
;
;   The only rational time format.  Because there are 24 hours in a day, and
;   counting to 24 by counting to 12, twice, is ridiculous.
;
type                = internal/date
inherit             = leaf/a
interval            = 1.0
time                = %{F#bec674}%H%{F#bca674}:%{F#bec674}%M
format              = <label>
label               = %time%

[module/day]
; Japanese Day of the Week
;
;   This script onverts English DoW names to Japanese.  Not sure if there's a
;   better way to do this, but this method requires the locale to be set to 
;   show English names for days of the week.  Should be pretty easy to adapt 
;   for other languages, though.
;
;   REQUIRES:   Any locale that uses English days of the week.
;               date    
;
type                = custom/script
inherit             = leaf/b
exec                = r=$(date +%A); case "${r}" in Sunday) d="日曜日";; Monday) d="月曜日";; Tuesday) d="火曜日";; Wednesday) d="水曜日";; Thursday) d="木曜日";; Friday) d="金曜日";; Saturday) d="土曜日";; *) d="${r}";; esac; printf "%s" "$d"
interval            = 60
format-foreground   = ${c.time_fg}
label               = %output%
label-padding       = 1

;------------------------------------------------
; Weather
;------------------------------------------------
[module/owm-update]
; OpenWeatherMap updater (owmapi backend only)
;
;   !! See the User Configuration section to set up your weather provider !!
;
;   This script needs to be called if you're using the OWM API backend in order
;   to cache weather data for other the display modules.  We do this to reduce
;   the number of API calls to the OpenWeatherMap service, which are limited to
;   something like 2000 calls per day on free accounts.  
;   The default interval of 600 seconds works out to 144 API calls per day.
;
;   This module must be included in the module list, however it displays nothing
;   and takes up no space at all on your bar.
;
;   REQUIRES:   OpenWeatherMap API key
;               curl
;               jq
;
type                        = custom/script
inherit                     = config/weather
hidden                      = true
exec                        = if [ "${WAPI_BACKEND}" == "owmapi" ]; then r=$(curl "${WAPI_OWM_URL}&lat=${WAPI_LAT}&lon=${WAPI_LON}&appid=${WAPI_OWM_KEY}" 2> /dev/null); t=$(printf "%s" "${r}" | jq -r '.main.temp'); i=$(echo "${r}" | jq -r '.weather[].icon'); case ${i:0:3} in 01d) c="";; 01n) c="";; 02d) c="";; 02n) c="";; 03d) c="";; 03n) c="";; 04d) c="";; 04n) c="";; 09d) c="";; 09n) c="";; 10d) c="";; 10n) c="";; 11d) c="";; 11n) c="";; 13d) c="";; 13n) c="";; 50d) c="";; 50n) c="";; *) c="";; esac; eval WAPI_CACHEDIR="${WAPI_CACHEDIR}"; mkdir -p "${WAPI_CACHEDIR}"; printf "%s" "${c}" > "${WAPI_CACHEDIR}/owm-icon"; printf "%s" "${t}" > "${WAPI_CACHEDIR}/owm-temp"; fi  echo "$t - $c"
interval                    = 600

[module/owm-temp]
; OpenWeatherMap temperature display module
;
;   !! See the User Configuration section to set up your weather provider !!
;
;   This script checks which backend is configured and pulls data from that 
;   source to display the current local temperature.  If you complain about the
;   units being in celcius, I'll laugh at you and tell you to use celcius.
;
;   REQUIRES:   OpenWeatherMap API Key  OR  a configured local OpenHAB instance (see user config)
;               curl
;               jq
;               Nerd Fonts (to display correctly)
;
type                        = custom/script
inherit                     = leaf/b config/weather env/const
exec                        = if [ "${WAPI_BACKEND}" == "none" ]; then printf "%s" " "; elif [ "${WAPI_BACKEND}" == "owmapi" ]; then eval WAPI_CACHEDIR="${WAPI_CACHEDIR}"; r=$(cat "${WAPI_CACHEDIR}/owm-temp" 2> /dev/null); printf "%0.1f" "${r}"; elif [ "${WAPI_BACKEND}" == "openhab" ]; then r=$(curl -k "${WAPI_OH_URL}/rest/items/${WAPI_OH_ITEM_CTEMP}" 2> /dev/null | jq -r '.state'); printf "%0.1f" "${r//[!0-9.]/}"; else printf "%s" " "; fi
interval                    = 30
format                      = <label>
format-suffix               = 
format-suffix-font          = 1
format-suffix-foreground    = ${c.weath_temp_unit}
label                       = "%output:4:4%"
label-alignment             = center
label-foreground            = ${c.weath_temp}

[module/owm-icon]
; OpenWeatherMap current condition display module
;
;   !! See the User Configuration section to set up your weather provider !!
;
;   This script checks which backend is configured and pulls data from the
;   source to display the current weather condition as an icon font.
;
;   REQUIRES:   OpenWeatherMap API Key  
;                   OR  
;               a configured local OpenHAB instance
;               curl
;               jq
;               Nerd Fonts (to display correctly)
;
type                    = custom/script
inherit                 = leaf/b config/weather env/const
exec                    = if [ "${WAPI_BACKEND}" == "none" ]; then printf "%s" ""; elif [ "${WAPI_BACKEND}" == "owmapi" ]; then eval WAPI_CACHEDIR="${WAPI_CACHEDIR}"; r=$(cat "${WAPI_CACHEDIR}/owm-icon" 2> /dev/null); printf "%s" "${r}"; elif [ "${WAPI_BACKEND}" == "openhab" ]; then r=$(curl -k "${WAPI_OH_URL}/rest/items/${WAPI_OH_ITEM_CCID}" 2> /dev/null | jq -r '.state'); case ${r:0:3} in 01d) c="";; 01n) c="";; 02d) c="";; 02n) c="";; 03d) c="";; 03n) c="";; 04d) c="";; 04n) c="";; 09d) c="";; 09n) c="";; 10d) c="";; 10n) c="";; 11d) c="";; 11n) c="";; 13d) c="";; 13n) c="";; 50d) c="";; 50n) c="";; *) c="";; esac; printf "%s" "${c}"; else printf "%s" ""; fi
interval                = 30
format                  = <label>
format-foreground       = ${c.weath_ico}
label                   = "%output%"
label-font              = 6
; adjust here to center middle bar section
label-padding-left      = 12px

;------------------------------------------------
; Errors
;------------------------------------------------
[module/errorcheck]
; Error Checking
;   Checks to see if any script dependencies for this theme are missing and also
;    checks for configuration errors.  Sends a helpful notification over dbus if 
;   needed.  Guaranteed to annoy at least a few people.  
;   I'm an Arch user, so please let me know how I can improve this for other 
;   distros, BSD's, and weird setups yall are running.  
;
;   REQUIRES:   dbus
;               notify-send
;
type                    = custom/script
inherit                 = leaf/c config/weather env/const
exec                    = a=(bash date curl jq grep bluetoothctl notify-send); m=""; e=0; for i in "${a[@]}"; do if ! command -v "${i}" > /dev/null; then m+="${i} "; ((e++)); fi; done; if command -v pacman > /dev/null; then if ! command -v checkupdates > /dev/null; then m+="checkupdates (from pacman-contrib)"; fi; fi; if [ ${#m} -gt 0 ]; then notify-send "Polybar" "This theme requires several scripting commands to be installed for all features to work correctly.\\n\\nThe following commands need to be installed:\\n ${m}" > /dev/null; fi;  if command -v fc-list > /dev/null; then a=("mononoki Nerd Font:style=Regular" "mononoki Nerd Font:style=Bold" "mononoki Nerd Font Mono:style=Regular" "mononoki Nerd Font Mono:style=Bold" "Noto Sans CJK JP:style=Regular"); m=""; for i in "${a[@]}"; do if ! fc-list | grep "${i}" > /dev/null; then ((e++)); m+=" ${i}\\n"; fi; done; if [ ${#m} -gt 0 ]; then notify-send "Polybar" "This theme requires the following fonts to be installed:\\n${m}"; fi; fi;  if [ "${WAPI_BACKEND}" == "owmapi" ]; then if command -v curl > /dev/null && command -v jq > /dev/null; then m=$(curl "${WAPI_OWM_URL}&lat=${WAPI_LAT}&lon=${WAPI_LON}&appid=${WAPI_OWM_KEY}" 2> /dev/null | jq -r '.message // empty'); if [ ${#m} -gt 0 ]; then ((e++)); notify-send "Polybar" "Error getting weather data:\\n ${m}" > /dev/null; fi; fi; elif [ "${WAPI_BACKEND}" == "openhab" ]; then if command -v curl > /dev/null; then r=$(curl -ksS "${WAPI_OH_URL}" 2>&1); if [ $? -ne 0 ]; then ((e++)); notify-send "Polybar" "Error getting weather data:\\n ${r}" > /dev/null; else a=("${WAPI_OH_ITEM_CTEMP}" "${WAPI_OH_ITEM_CCID}"); for i in "${a[@]}"; do m=$(curl -ksS "${WAPI_OH_URL}/rest/items/${i}" 2>&1 | jq -r '.error.message // empty '); if [ "${#m}" -gt 0 ]; then ((e++)); notify-send "Polybar" "Error getting weather data:\\n ${m}" > /dev/null; fi; done; fi; fi; else ((e++)); notify-send "Polybar" "Error getting weather data:\\n Invalid backend: ${WAPI_BACKEND}.\\n\\nCheck the user configuration section." > /dev/null; fi; if [ "${e}" -gt 0 ]; then printf "%s" "${ERROR_ICON}"; fi
interval                = 3600
format                  = <label>
label                   = %output%
label-foreground        = ${c.alert}
label-font              = 6
label-padding           = 8px

;------------------------------------------------
; System Updates
;------------------------------------------------
[template/updates]
type                    = custom/script
format                  = <label>
format-foreground       = ${c.update_ico}
label                   = %output%
label-font              = 6
label-padding           = 8px

[module/pacupdates]
; Pacman System Update Checker
;   Periodically check for package updates using the checkupdates command from
;   pacman-contrib in the Arch repos.  Should work on any distro that uses pacman.
;   Default is polling every 60 seconds -- mostly just to clear the indicator once
;   the system has been updated.  Pretty inexpensive cpu-wise.
;
;   REQUIRES:   pacman
;               checkupdates  (from pacman-contrib)
;
inherit                 = template/updates leaf/c
env-UPDATE_ICON         = ${i.pacupdates}
exec-if                 = command -v checkupdates > /dev/null
exec                    = if [ $(checkupdates 2> /dev/null | wc -l) -gt 0 ]; then printf "%s" "${UPDATE_ICON}"; fi
interval                = 60

[module/aptupdates]
; Apt System Update Checker
;
;   !! APT USERS PLEASE READ !!
;
;   Unfortunately apt kinda sucks at this, and there's apparently no rootless 
;   equivelant of 'checkupdates' for apt/debian-based distros, seemingly due to the
;   way the file persmissions work.
;
;   This means you cannot check for new updates without root (at least not easily).
;   You can, however, perform a dry-run on an upgrade to see which packages COULD be
;   upgraded.  If you were to set up a cron job to run 'apt update' periodically, then
;   the package lists will be updated by a privileged user, and the unprivileged user
;   running polybar can check them for available upgrades using this script.
;
;   This module has not been tested much.  Interval can be pretty low since most 
;   apt-based distros get updated infrequently.
;
;   Again, you need to run a cron job for 'apt update', or possibly in conjunction 
;   with unattendedupgrades, in addition to this script.  
;   DO NOT run polybar as root!
;
;   REQUIRES:   apt-get
;               cron job running 'apt update' or similar
;
inherit                 = template/updates leaf/c
env-UPDATE_ICON         = ${i.aptupdates}
exec-if                 = command -v apt-get > /dev/null
exec                    = if [ $(apt-get -q -s upgrade | grep "^Inst " | wc -l) -gt 0 ]; then printf "%s" "$UPDATE_ICON "; else printf " "; fi
interval                = 1200

;------------------------------------------------
; Gamepad Battery Level Icons
;------------------------------------------------
[template/gamepads]
; Gamepad Module Template
;
;   !! Check the User Configuration section to set up your controllers !!
;
;   This script checks the sysfs paths provided by the user to read the battery 
;   level percentage, then display the appropriate battery level icon, which is 
;   also selectable in the user config.   The script is also able to detect how 
;   many icons are present in the set so you're not too restricted, but more 
;   granularity is probably better.
;
;   Support is dependent on hardware and driver.  Some drivers may not provide 
;   this information or follow similar sysfs file patterns.  Written and tested 
;   using the 'hid_playstation' driver and a Sony PS5 controller.
;
;   REQUIRES:   sysfs
;               bc
;               Any gamepad driver that reports a battery in percent.
;
type                        = custom/script
exec                        = if [ ! -e "${GMPD_BATT_SYSFSPATH}" ]; then echo; exit 1; else a=( ${GMPD_ICONS} ); v=$(cat "${GMPD_BATT_SYSFSPATH}"); i=$(printf "%.0f" "$(bc <<< "scale=2; ${v}/100 * $((${#a[@]}-1))")"); printf "%s" "${a[${i}]}"; fi
interval                    = 2
tail                        = false
format                      = <label>
format-prefix               = 
format-prefix-fonts         = 7
format-prefix-foreground    = ${c.gamepadbatt_ico}
format-failed               = 
format-failed-prefix        =
label                       = %output%
label-font                  = 4
label-foreground            = ${c.gamepadbatt_ico}
label-padding-right         = 1
label-failed                =


[module/gamepad1]
; Gamepad 1 Module
;
;   !! Check the User Configuration section to set up your controllers !!
inherit                     = config/gamepad1 template/gamepads config/gamepadicons leaf/c

[module/gamepad2]
; Gamepad 2 Module
;
;   !! Check the User Configuration section to set up your controllers !!
inherit                     = config/gamepad2 template/gamepads config/gamepadicons leaf/c

;------------------------------------------------
; System Battery Level
;------------------------------------------------
[module/batt]
; System Battery Level
;
;   !! Check the user configuration section to set this up !!
;
type                        = internal/battery
inherit                     = leaf/c config/sysbatt
full-at                     = 95
low-at                      = 5
poll-interval               = 5
format-charging             = <animation-charging>
format-discharging          = <ramp-capacity>
format-full                 = <ramp-capacity>
format-low                  = <animation-low>
ramp-capacity-0             = 
ramp-capacity-1             = 
ramp-capacity-2             = 
ramp-capacity-3             = 
ramp-capacity-4             = 
ramp-capacity-5             = 
ramp-capacity-6             = 
ramp-capacity-7             = 
ramp-capacity-8             = 
ramp-capacity-9             = 
ramp-capacity-10            = 
animation-charging-0        = 
animation-charging-1        = 
animation-charging-2        = 
animation-charging-3        =  
animation-charging-4        =  
animation-charging-5        = 
animation-charging-6        = 
animation-charging-7        = 
animation-charging-8        = 
animation-charging-9        = 
animation-charging-10       = 
animation-charging-framerate= 250
animation-low-0             = 
animation-low-1             = 
animation-low-framerate     = 500

;------------------------------------------------
; Bluetooth
;------------------------------------------------
[module/bluetooth]
; Bluetooth Indicator and Control
;
;   Utilizes the more modern 'bluetoothctl' command from bluez.  Older distros
;   still using hciconfig et al probably won't work with this, but I think
;   most of us Linux users are using the replacement by now.  If bluetoothctl 
;   is not installed, the module will be hidden.
;
;   Left-click toggles radio power off and on.
;   Right-click pulls up a terminal with the bluetoothctl shell so you can do 
;   device pairing, etc.  Personally. I much prefer  this to the available 
;   GUI tools.  Nice and simple.
;
;   REQUIRES:   bluetoothctl
;               grep
;               any terminal (kitty is set by default)
;
type                    = custom/script
inherit                 = leaf/c
exec-if                 = command -v bluetoothctl
exec                    = bluetoothctl show | grep -ice 'Powered.*yes'
interval                = 1
format                  = <label>
format-fail             = <label-fail>
label                   = 
label-font              = 5
label-foreground        = ${c.bt_on}
label-padding-right     = 1
label-fail              = 
label-fail-font         = 5
label-fail-foreground   = ${c.bt_off}
label-fail-padding-right= 1
click-left              = if bluetoothctl show | grep -e 'Powered.*yes'; then bluetoothctl power off; else bluetoothctl power on; fi
click-right             = kitty bluetoothctl

;------------------------------------------------
; RAM utilization
;------------------------------------------------
[module/mem]
type                    = internal/memory
inherit                 = leaf/b
interval                = 3
warn-percentage         = 90
format                  = <label>
format-prefix           = 
format-prefix-font      = 5
format-foreground       = ${c.mem_ico}
format-label-background = ${c.leaf_b}
label                   = "%percentage_used:3%%"
label-foreground        = ${c.mem_val}

;------------------------------------------------
; CPU Utilization
;------------------------------------------------
[module/cpu]
type                    = internal/cpu
inherit                 = leaf/b
interval                = 0.5
warn_percentage         = 95
format                  = <label>
format-prefix           = 
format-prefix-font      = 5
format-foreground       = ${c.cpu_ico}
label                   = "%percentage:3%% "
label-foreground        = ${c.cpu_val}

;------------------------------------------------
; Brightness Control
;------------------------------------------------
[module/backlight]
; Backlight Module
;
;   !! Check the User Configuration section to configure your backlight !!
;
;   REQUIRES:   Supported hardware
;
type                    = internal/backlight
inherit                 = leaf/b config/backlight
format                  = <label>
format-prefix           = 盛
format-prefix-font      = 5
format-foreground       = ${c.backlight_ico}
label                   = "%percentage:3%%"
label-foreground        = ${c.backlight_val}
label-padding-right     = 1

;------------------------------------------------
; Volume Control
;------------------------------------------------
[module/pulse]
; Pulse Audio Volume Indicator and Control
;
;   !! Check the User Configuration section to manually configure sinks !!
;
;   Right click brings up the pavucontrol mixer if you have it installed.
;
;   REQUIRES:   pulseaudio OR pipewire-pulse
;               pavucontrol
;
type                        = internal/pulseaudio
inherit                     = leaf/b
use-ui-max                  = false
format-volume               = <label-volume>
format-volume-prefix        = 墳
format-volume-prefix-font   = 5
format-muted                = <label-muted>
format-muted-prefix         = 婢
format-muted-prefix-font    = 5
label-volume                = "%percentage:3%%"
label-muted                 = " mute"
click-right                 = pavucontrol
format-volume-foreground    = ${c.vol_ico}
label-volume-foreground     = ${c.vol_val}
format-muted-foreground     = ${c.vol_ico}
label-muted-foreground      = ${c.vol_val}


;------------------------------------------------------------------------------------------------
; Window Managers
;------------------------------------------------------------------------------------------------
;------------------------------------------------
; Generic
;------------------------------------------------
[module/ws]
; Workspaces
;
;   This is a generic method which "probably" works with most window managers.
;   I use it with qtile, so that makes it my primary workspace module, even 
;   when messing around with i3, dwm, etc.
;
;   REQUIRES:   EHWM compatible window manager
;
type                        = internal/xworkspaces
inherit                     = leaf/a
pin-workspaces              = false
enable-click                = true
enable-scroll               = true
reverse-scroll              = false
icon-0                      = 1;
icon-1                      = 2;
icon-2                      = 3;
icon-3                      = 4;
icon-4                      = 5;
icon-5                      = 6;
icon-6                      = 7;
icon-7                      = 8;
icon-8                      = 9;
default-icon                = ?
format                      = <label-state>
label-monitor               = %name%
label-empty                 = %name%
label-empty-foreground      = ${c.ws_empty_fg}
label-empty-padding         = 1
label-empty-underline       = 
label-occupied              = %name%
label-occupied-padding      = 1
label-occupied-foreground   = ${c.ws_occupied_fg}
label-occupied-underline    = 
label-active                = %name%
label-active-padding        = 1
label-active-foreground     = ${c.ws_active_fg}
label-active-background     = ${c.ws_active_bg}
label-active-underline      = 
label-urgent                = %name%
label-urgent-padding        = 1
label-urgent-foreground     = ${c.ws_urgent_fg}
label-urgent-underline      = 


;------------------------------------------------------------------------------------------------
; Misc Nerd Font Icons
;------------------------------------------------------------------------------------------------
;      ﳝ          ﳜ    ﴫ        ﲲ  
; 雷      
; ﱝ    婢墳奔奄ﯦ ﯧ  
;           ﭠ ﭢ ﭥ  喇ﭡ ﭣ ﭦ 奈  
;                        ﱊ ﱌ ﱍ ﱋ ﱎ ﱉ 
;                    
; ﭱ 﫯            蓼 ﲬ 
;          
;     
